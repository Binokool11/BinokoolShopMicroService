// <auto-generated />
using Binokool.Services.ProductAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Binokool.Services.ProductAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Binokool.Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryName = "Acoustic guitar",
                            Description = "Идеальный вариант для домашних посиделок и самообучения",
                            ImgUrl = "https://musicmarket.by/images/thumbnails/240/240/detailed/1045/gibson-les-paul-tribute-sh-1.jpg",
                            Name = "Gibson-SG",
                            Price = 1000.0
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryName = "Acoustic guitar",
                            Description = "Выбор профессионального музыканта",
                            ImgUrl = "https://musicmarket.by/images/thumbnails/240/240/detailed/1045/gibson-les-paul-custom-w-ebony-fingerboard-gloss-2019-e-1.jpg",
                            Name = "Crafter-SF",
                            Price = 3000.0
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryName = "Electric guitar",
                            Description = "Гитара для продолжающих гитаристов",
                            ImgUrl = "https://musicmarket.by/images/thumbnails/240/240/detailed/1024/AD810_SSB_-main-cort.jpg",
                            Name = "Cort-BF",
                            Price = 1500.0
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryName = "Electric guitar",
                            Description = "Прекрасная гитара из красного дерева",
                            ImgUrl = "https://musicmarket.by/images/thumbnails/240/240/detailed/1066/crafter-d-7-n.jpg",
                            Name = "Sonata-TR",
                            Price = 1000.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
